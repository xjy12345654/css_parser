import {   VerticalBox,LineEdit } from "std-widgets.slint";

component my_button inherits Rectangle {
    width: 200px;
    height: 40px;
    // background: area.pressed ? #fff : orange;
    border-radius: 5px;
    // area := TouchArea { 
    // }
}

struct Checklist{
    id:string,
    value:string,
    name:string,
}

export component AppWindow inherits Window {
    width: 500px;
    height: 330px;
    default-font-size: 18px;
    default-font-family: "Helvetica,Verdana,Arial,sans-serif";
    icon: @image-url("./images/icon_css.png");
    title: "css转换器";
    // background: @linear-gradient(90deg, #2041a5 0%, #1f49c7 50%, #042EA7 100%);
    background: @linear-gradient(90deg, #4385e9 0%, #327ae6 50%, #1d69da 100%);
    // in-out property <int> counter: 42;
    in-out property <string> be_fontsize: 50;
    in-out property <string> be_width: 1920;
    in-out property <string> be_height: 1080;
    // in-out property <string> be_filespath: "";
    in-out property <bool> err_pop_flag: false;
    in-out property <bool> err_pop_opacity_flag: false;
    in-out property <bool> msg_pop_opacity_flag: false;
    in-out property <bool> msgerr_pop_opacity_flag: false;
    in-out property <duration> an_dutime: 200ms;
    in-out property <duration> msg_dutime: 2000ms;
    in-out property <string> selected_index: "0";
    in-out property <[Checklist]> checklist:[{
        id:"0",
        value:"0",
        name:"convert_rem",
    }, {
        id:"1",
        value:"1",
        name:"convert_vw",
    }];
    property <[Checklist]> errList:[
        { id:"0", name:"erro1", value:"File path is not set" },
        { id:"1", name:"erro2", value:"File path  not found" },
        { id:"2", name:"erro3", value:"No CSS files found in the directory" }
    ];

 
    // 错误弹窗timer
    err_pop_timer := Timer {
        interval: an_dutime;
        running: false;
        triggered() => {
            self.running = false;
            root.err_pop_flag = false;
        }
    }
   // success弹窗timer
    msg_pop_timer := Timer {
        interval: msg_dutime;
        running: false;
        triggered() => {
            self.running = false;
            root.msg_pop_opacity_flag = false;
        }
    }

       // 错误弹窗timer
       msgerr_pop_timer := Timer {
        interval: msg_dutime;
        running: false;
        triggered() => {
            self.running = false;
            root.msgerr_pop_opacity_flag = false;
        }
    }

    callback msgsuc_pop;
    msgsuc_pop => {
        root.msg_pop_opacity_flag = true;
        msg_pop_timer.running = true;
    }
    callback msgerr_pop(int);
    msgerr_pop(err_type) => {
        // if (err-type == 0) {
            err_te.text = errList[err_type].value;
        // }
        root.msgerr_pop_opacity_flag = true;
        msgerr_pop_timer.running = true;
    }
   
    // callback request-increase-value();
    callback btnclicked();
    callback select_file();
    callback flie_inputte(string);
    flie_inputte(flie_path) => {
        // debug(flie_path);
        flie_input.text = flie_path;
    }
    callback getfilepath() -> string;
    getfilepath() => {
        return flie_input.text;
    }
    // flie_input
 
    // callback checkclicked(checklist:Checklist);
    // VerticalBox {
    //     Text {
    //         text: "Counter: \{root.counter}";
    //     }

    //     Button {
    //         text: "Increase value";
    //         clicked => {
    //             root.request-increase-value();
    //         }
    //     }
    // }

    VerticalLayout {
        width: 75%;
        padding-top: 20px;
        alignment: center;
        Rectangle {
        // 成功消息提示
            Rectangle {
                y: -50px;
                height: 35px;
                z: 3;
                // background: rgba(255,255,255,0.7);
                background: @linear-gradient(90deg, #87eca6 0%, #31d882 50%, #16cf70 100%);
                opacity: msg_pop_opacity_flag ? 1 : 0;
                animate opacity { duration: an_dutime; }
                border-radius: 6px;
                Text {
                    text: "success !";
                    font-size: 16px;
                    color: #41418a;
                }
            }
            //错误消息提示
            Rectangle {
                y: -50px;
                height: 35px;
                z: 3;
                // background: rgba(255,255,255,0.7);
                background: @linear-gradient(90deg, #ff6666 0%, #ff4d4d 50%, #d90000 100%);
                opacity: msgerr_pop_opacity_flag ? 1 : 0;
                animate opacity { duration: an_dutime; }
                border-radius: 6px;
                err_te := Text {
                    // text: "Path not found !";
                    font-size: 16px;
                    color: #f0f0f0;
                }
            }
        // 窗口内容
        VerticalLayout {

                if selected_index == "0":VerticalLayout {
                    HorizontalLayout {
                        // alignment: center;
                        spacing: 10px;
                        Rectangle {
                            min-width: 150px;
                            // background: rebeccapurple;

                            HorizontalLayout {
                                alignment: start;
                                VerticalLayout {
                                    alignment: center;
                                    Text {
                                        text: "Font benchmark:";
                                        color: #fff;
                                    }
                                }
                            }
                        }

                        Rectangle {
                            horizontal-stretch: 1;
                            // background: orange;
                            LineEdit {
                                width: 100%;
                                placeholder-text: "font_size_num";
                                text: "\{root.be_fontsize}";
                                edited(text) => {
                                    root.be_fontsize = text;
                                }
                            }

                            height: 30px;
                        }

                        padding-bottom: 15px;
                    }
                }

                if selected_index == "1":VerticalLayout {
                    HorizontalLayout {
                        spacing: 10px;
                        Rectangle {
                            min-width: 150px;
                            // background: rebeccapurple;
                            HorizontalLayout {
                                alignment: start;
                                VerticalLayout {
                                    alignment: center;
                                    Text {
                                        text: "Width benchmark:";
                                        color: #fff;
                                    }
                                }
                            }
                        }

                        Rectangle {
                            LineEdit {
                                width: 100%;
                                placeholder-text: "width_num";
                                text: "\{root.be_width}";
                                edited(text) => {
                                    root.be_width = text;
                                }
                            }

                            height: 30px;
                        }

                        padding-bottom: 15px;
                    }

                    HorizontalLayout {
                        spacing: 10px;
                        Rectangle {
                            width: 150px;
                            // background: rebeccapurple;
                            HorizontalLayout {
                                VerticalLayout {
                                    alignment: center;
                                    Text {
                                        text: "Height benchmark:";
                                        color: #fff;
                                    }
                                }
                            }
                        }

                        Rectangle {
                            horizontal-stretch: 1;
                            LineEdit {
                                width: 100%;
                                placeholder-text: "height_num";
                                text: "\{root.be_height}";
                                edited(text) => {
                                    root.be_height = text;
                                }
                            }

                            height: 30px;
                        }

                        padding-bottom: 15px;
                    }
                }

                VerticalLayout {
                    HorizontalLayout {
                        spacing: 10px;
                        Rectangle {
                            min-width: 150px;
                            // background: rebeccapurple;
                            HorizontalLayout {
                                alignment: start;
                                VerticalLayout {
                                    alignment: center;
                                    Text {
                                        text: "Files path:";
                                        color: #fff;
                                    }
                                }
                            }
                        }

                        Rectangle {
                            width: 130px;
                            // background: orange;
                            // horizontal-stretch: 1;
                          flie_input := LineEdit {
                                width: 100%;
                                placeholder-text: "files_path";
                                // text: root.be_filespath;
                                text: "";
                                font-size: 14px;
                                // accepted => { debug(root.be_filespath) }
                                edited(text) => {
                                    // root.be_filespath = text;
                                    flie_input.text = text;
                                    // debug("text_"+text);
                                    // debug("text2_"+root.be_filespath)
                                }
                            }

                            height: 30px;
                        }

                        Rectangle {
                            horizontal-stretch: 1;
                            border-radius: 3px;
                            VerticalLayout {
                                padding-left: 4px;
                                padding-right: 4px;
                                alignment: center;
                                HorizontalLayout {
                                    alignment: center;
                                    Text {
                                        text: "choose";
                                        color: #fff;
                                    }
                                }
                            }

                            background: select_file.pressed ? #1f096d : @linear-gradient(90deg, #1552fa, #4715fa);

                            select_file := TouchArea {
                                mouse-cursor: pointer;
                                clicked => {
                                    root.select_file();
                                }
                            }
                        }

                        padding-bottom: 15px;
                    }
                }
            }
        }
       //切换内容    
        HorizontalLayout {
            padding-bottom: 15px;
            Rectangle {
                height: 30px;
                // background: #b2ce93;
                HorizontalLayout {
                    spacing: 10px;
                    for item[index] in checklist: Rectangle {
                        HorizontalLayout {
                            alignment: center;
                            VerticalLayout {
                                padding-right: 10px;
                                alignment: center;
                                Text {
                                    text: item.name;
                                    font-size: 16px;
                                    color: #fff;
                                }
                            }

                            VerticalLayout {
                                alignment: center;
                                // Rectangle {
                                //     width: 24px;
                                //     height: 24px;
                                //     background: yellow;
                                // }

                                Rectangle {
                                    width: 20px;
                                    height: 20px;
                                    // border-radius: 20px;
                                    // border-color: #ABC4FF;
                                    // border-width: 2px;
                                    Image {
                                        width: 100%;
                                        height: 100%;
                                        // source: index == selected_index ? @image-url("./images/checked.png") : @image-url("./images/no_check.png");
                                        source: @image-url("./images/no_check.png");

                                        Image {
                                            width: 100%;
                                            height: 100%;
                                            opacity: 0;
                                            animate opacity { duration: an_dutime; }
                                            states [
                                                check_active when item.value == root.selected_index: {
                                                    source: @image-url("./images/checked.png");
                                                    opacity: 1;
                                                }
                                            ]
                                        }
                                    }

                                    // Image {
                                    //     width: 100%;
                                    //     height: 100%;
                                    //     // source: index == selected_index ? @image-url("./images/checked.png") : @image-url("./images/no_check.png");
                                    //     // source: @image-url("./images/no_check.png");
                                    //     opacity: 0;
                                    //     animate opacity { duration: an_dutime; }
                                    //     states [
                                    //         check_active when item.value == root.selected_index: {
                                    //             source: @image-url("./images/checked.png");
                                    //             opacity: 0;
                                    //             opacity: 1;
                                    //         }
                                    //     ]
                                    // }
                                }
                              
                                // Image {
                                //     width: 20px;
                                //     height: 20px;
                                    
                                //     // source: index == selected_index ? @image-url("./images/checked.png") : @image-url("./images/no_check.png");
                                //     source: @image-url("./images/no_check.png");
                                //     states [
                                //         check_active when item.value == root.selected_index: {
                                //             source: @image-url("./images/checked.png");
                                //         }
                                //     ]
                                // }
                            }
                        }

                        TouchArea {
                            mouse-cursor: pointer;
                            clicked => {
                                // debug(item.value);
                                // selected_index = index;
                                root.selected_index = item.value;
                            }
                        }
                    }
                }
            }
        }

        Rectangle {
            // background: rebeccapurple;
            HorizontalLayout {
                alignment: center;
                my_button {
                    Text {
                        font-size: 16px;
                        text: "Enter";
                        color: #fff;
                    }
                
                    // background: area.pressed ? #2559d1 : @linear-gradient(90deg,   #4d8be7 , #2663F2);
                    background: area.pressed ? #1f096d : @linear-gradient(90deg, #1552fa, #4715fa);
                    animate background { duration: an_dutime; }
                    area := TouchArea {
                        mouse-cursor: pointer;
                        clicked => {
                            if (root.selected_index == "0") {
                                if (root.be_fontsize.is-float()) {
                                    root.btnclicked();
                                    // root.msg_pop_opacity_flag = true;
                                    
                                    // msg_pop_timer.running = true;
                                } else {
                                    // debug("请输入有效数字");
                                    root.err_pop_opacity_flag = true;
                                    root.err_pop_flag = true;
                                }
                            } else {
                                if (root.be_width.is-float() && root.be_height.is-float()) {
                                    root.btnclicked();
                                    // root.msg_pop_opacity_flag = true;
                                    // msg_pop_timer.running = true;
                                } else {
                                    // debug("请输入有效数字");
                                    root.err_pop_opacity_flag = true;
                                    root.err_pop_flag = true;
                                }
                            }
                            flie_input.clear-focus();
                        }
                    }
                }
            }
        }
    }
   //输入无效数字的提示弹窗 
   Rectangle {
        visible: {
            err_pop_flag
        };
        z: 2;
        background: rgba(0,0,0,0.7);
        opacity: err_pop_opacity_flag ? 1 : 0;
        animate opacity { duration: an_dutime; }
        TouchArea { }

        VerticalLayout {
            width: 300px;
            alignment: center;
            Rectangle {
                background: rgba(255,255,255,0.8);
                border-radius: 6px;
                VerticalLayout {
                    padding: 20px;
                    HorizontalLayout {
                        Rectangle {
                            Text {
                                text: "please input number!";
                                font-size: 20px;
                                color: #333;
                            }
                        }
                    }

                    HorizontalLayout {
                        padding-top: 20px;
                        alignment: center;
                        Rectangle {
                            width: 150px;
                            height: 40px;
                            // background: #2E68ED;
                            background: close_btn.pressed ? #1f096d : @linear-gradient(90deg, #1552fa, #4715fa);
                            animate background { duration: an_dutime; }
                            border-radius: 5px;
                            Text {
                                text: "close";
                                font-size: 15px;
                                color: #fff;
                            }

                            close_btn := TouchArea {
                                clicked => {
                                    root.err_pop_opacity_flag = false;
                                    err_pop_timer.running = true;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
